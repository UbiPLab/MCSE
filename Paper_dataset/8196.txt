DE Task analysis; Servers; Processor scheduling; Cloud computing;
   Scheduling; Computational modeling; Time factors; Multiple applications;
   task dependency; task scheduling; vehicular edge computing (VEC)
ID RESOURCE-ALLOCATION; MOBILE; ALGORITHM
AB Vehicular edge computing (VEC) offers a new paradigm to improve vehicular services and augment the capabilities of vehicles. In this article, we study the problem of task scheduling in VEC, where multiple computation-intensive vehicular applications can be offloaded to roadside units (RSUs) and each application can be further divided into multiple tasks with task dependency. The tasks can be scheduled to different mobile-edge computing servers on RSUs for execution to minimize the average completion time of multiple applications. Considering the completion time constraint of each application and the processing dependency of multiple tasks belonging to the same application, we formulate the multiple tasks scheduling problem as an optimization problem that is NP-hard. To solve the optimization problem, we develop an efficient task scheduling algorithm. The basic idea is to prioritize multiple applications and prioritize multiple tasks so as to guarantee the completion time constraints of applications and the processing dependency requirements of tasks. The numerical results demonstrate that our proposed algorithm can significantly reduce the average completion time of multiple applications compared with benchmark algorithms.