DE Autonomic computing; design quality metrics; self-management
   capabilities; self-* service; stock trade forecasting
ID COMPLEXITY
AB Every software in the universe requires maintenance and management during its life cycle. The manual management of software is costly and sometimes error-prone. The other solution is autonomic computing that induces self-management capabilities, "self-*services", in software systems with the help of autonomic managers. The design quality of a self-management capability affects the computing infrastructure regarding processing load, the memory requirement, data channel demand and performance of perturbation restore. It is critical to assess the design quality of a self-management capability to determine its effect over the computing infrastructure when it gets invoke against some anomaly or perturbation. Moreover, there are two possible host environments for an autonomic manager to offer a self-management capability as a self-* service: the local environment and the cloud environment. A criterion is needed to decide which environment is more suitable and cost-effective to run the service. However, the literature lacks in the assessment of the design quality metrics on self-management capabilities and the suitability and cost-effectiveness of the execution environment. In this work, we have proposed a suite of design quality metrics to determine the design quality of self-management capabilities. We validate the proposed metrics with a stock trade & forecasting system that was designed as an autonomic computing system with self-management capabilities. The proposed metrics were applied to define functions that identify the suitable and cost-effective execution environment for the self-* service. The results proved that these metrics are useful in determining the design quality, suitability, and cost-effectiveness of a self-* capability for an autonomic computing system. The proposed metrics can be used to compare differently designed autonomic solutions for complexity, efficiency, performance, understandability, and maintainability.