DE Clouds; dynamic scheduling; task classifier; task scheduling; virtual
   machines (VMs)
ID ALGORITHM
AB To maximize task scheduling performance and minimize nonreasonable task allocation in clouds, this paper proposes a method based on a two-stage strategy. At the first stage, a job classifier motivated by a Bayes classifier's design principle is utilized to classify tasks based on historical scheduling data. A certain number of virtual machines (VMs) of different types are accordingly created. This can save time of creating VMs during task scheduling. At the second stage, tasks are matched with concrete VMs dynamically. Dynamic task scheduling algorithms are accordingly proposed. Experimental results show that they can effectively improve the cloud's scheduling performance and achieve the load balancing of cloud resources in comparison with existing methods.
   Note to Practitioners-Task scheduling is one of the challenging problems in cloud computing, especially when deadline and cost are considered. As an important actuator, virtual machines (VMs) play a vital role for cloud task scheduling. To meet task deadlines, one needs to save the time of creating VMs, task waiting time, and executing time. To minimize the task execution cost, one needs to schedule tasks onto their most suitable VMs for execution. We propose a cloud task scheduling framework based on a two-stage strategy to do so. It precreates VMs according to historical scheduling data, therefore saving time for tasks to wait for creating VMs. It matches tasks with their most suitable VMs dynamically, therefore saving their execution cost. Under the premise of meeting task deadlines, it minimizes the waiting time of VMs to schedule tasks, thus minimizing the cost to be paid by users who utilize VMs. The readily deployable algorithms are designed and illustrated to improve cloud task scheduling and execution results in comparison with those using traditional methods.