DE Cloud computing; data security; security-sensitive; data encryption;
   workflow; task duplication; scheduling
ID SCIENTIFIC WORKFLOWS; ALGORITHM; SYSTEMS
AB With the wide deployment of cloud computing in many business enterprises as well as science and engineering domains, high quality security services are increasingly critical for processing workflow applications with sensitive intermediate data. Unfortunately, most existing worklfow scheduling approaches disregard the security requirements of the intermediate data produced by workflows, and overlook the performance impact of encryption time of intermediate data on the start of subsequent workflow tasks. Furthermore, the idle time slots on resources, resulting from data dependencies among workflow tasks, have not been adequately exploited to mitigate the impact of data encryption time on workflows' makespans and monetary cost. To address these issues, this paper presents a novel task-scheduling framework for security sensitive workflows with three novel features. First, we provide comprehensive theoretical analyses on how selectively duplicating a task's predecessor tasks is helpful for preventing both the data transmission time and encryption time from delaying task's start time. Then, we define workflow tasks' latest finish time, and prove that tasks can be completed before tasks' latest finish time by using cheapest resources to reduce monetary cost without delaying tasks' successors' start time and workflows' makespans. Based on these analyses, we devise a novel scheduling approach with selective tasks duplication, named SOLID, incorporating two important phases: 1) task scheduling with selectively duplicating predecessor tasks to idle time slots on resources; and 2) intermediate data encrypting by effectively exploiting tasks' laxity time. We evaluate our solution approach through rigorous performance evaluation study using both randomly generated workflows and some real-world workflow traces. Our results show that the proposed SOLID approach prevails over existing algorithms in terms of makespan, monetary costs and resource efficiency.