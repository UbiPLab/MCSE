DE Distributed storage systems; data reconstruction; fractional repetition
   codes; girth
ID EXACT-REGENERATING CODES; PARITY-CHECK CODES; LDPC CODES; INTERFERENCE
   ALIGNMENT; PERMUTATION MATRICES; MDS CODES; CONSTRUCTION; REPAIR;
   BINARY; GRAPHS
AB A distributed storage system (DSS) is one of the most vital components of a cloud computing system used for storing and sharing big data among authorized users. A typical DSS consists of n storage nodes each with a storage capacity of alpha units of data such that the entire file stored on the DSS can be recovered by accessing any k < n nodes. The objective of this paper is to construct fractional repetition (FR) codes with applications in DSSs. FR codes are the key to constructing a class of distributed storage codes with exact repair by transfer (i.e., upon failure, a failed storage node is exactly regenerated through simple downloading). A major drawback of existing FR codes is that they are insufficiently flexible to adapt adequately to system changes in DSSs. To address this problem, this paper introduces a new type of FR codes, called pliable FR codes, in which both the per-node storage alpha and repetition degree rho can easily and simultaneously be adjusted. In addition, this paper presents several constructions of pliable FR codes and provides a relatively comprehensive analysis of the constructed pliable FR codes, which reveals the following versatile properties of the codes: 1) the transposed codes of the constructed codes are also pliable FR codes; 2) the constructed codes attain a tight upper bound on the file size with equality at least for 1 <= k < min(3, k' + 1), where k' is the smallest value of k such that k alpha - (k - 1) > n-1/rho-1; 3) the constructed codes also meet a Singleton-like bound on the minimum distance at least for 1 <= k < 3, which demonstrates their optimality; 4) the computational complexity necessary for determining the file size or the minimum distance of the constructed codes can be greatly reduced when it is hard to exactly determine them; and 5) the constructed codes can be used as fractional repetition batch codes to provide load balancing in DSSs, for which the batch size (i.e., the number of symbols that can be read in parallel) can be exactly determined.