DE Proof of possession; Data integrity audit; Third party audit; Cloud
   computing
AB Cloud computing is a recent phrase in marketing for a concept which has been known for years: Outsourcing. Cloud computing provides cornucopian of gratuities for both individual users and business organizations. 'Cloud' is more of a notion where files and data are hosted online and can be accessed when required via a number of methods, anywhere, and at any time. That is the gist of it. Providing storage space to cloud users is an appealing service of cloud computing. Although cloud storage provides benefits of location independence access to data, reduced burden for hardware and software maintenance and many more, yet this service has several challenges in the range of security and preserving data. Cloud servers may exist in white puffy shapes in the azure, but these are not immune to temporal errors. To ensure that outsourced data is secure and is not tampered, cloud provider must allow data proprietor to periodically audit data integrity. Numerous Remote Data Auditing (RDA) protocols have been proposed by researchers so far. In presented work, to cope with this problem we analyze the efficiency issues of a current protocol for data integrity auditing in cloud storage and propose an approach based on Relative Index and Time Stamped Merkle Hash Tree (RITS - - MHT) which integrates MHT with relative index of a node resulting in reduction of computation cost of searching a data block from O(n) in Wang's protocol to O(log n) and time of last modification to data, thereby guarantying freshness of data respectively. RITS - - MHT ensures that the outsourced data has not been polluted as well as it assures that the recent copy of data is reclaimed. This protocol supports public auditing of data, and efficiently supports data dynamic operations like insertion, modification, deletion of outsourced data at minimal computational cost. The security of proposed protocol has been proved in Random Oracle Model (ROM). As compared to Wang's protocol, RITS - - NWT is more efficient in terms of computation cost.