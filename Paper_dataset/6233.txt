DE Resource consumption analysis; Cloud computing; Behavioural type system;
   Subject reduction; Concurrent programming
ID HEAP-SPACE ANALYSIS; COST-ANALYSIS; COMPUTATIONAL-COMPLEXITY; INFERENCE;
   PROGRAMS
AB We propose a static analysis technique that computes upper bounds of virtual machine usages in a concurrent language with explicit acquire and release operations of virtual machines. In our language it is possible to delegate other (ad-hoc or third party) concurrent code to release virtual machines (by passing them as arguments of invocations). Our technique is modular and consists of (i) a type system associating programs with behavioural types that record relevant information for resource usage (creations, releases, and concurrent operations), (ii) a translation function that takes behavioural types and returns cost equations, and (iii) an automatic off-the-shelf solver for the cost equations. A soundness proof of the type system establishes the correctness of our technique with respect to the cost equations. We have experimentally evaluated our technique using a cost analysis solver and we report some results. (C) 2017 Elsevier B.V. All rights reserved.