DE cloud computing; GPU; heterogeneous architectures; image and video
   processing; medical imaging; motion tracking
ID FEATURES
AB Nowadays, image and video processing applications have become widely used in many domains related to computer vision. Indeed, they can come from cameras, smartphones, social networks, or from medical devices. Generally, these images and videos are used for illustrating people or objects (cars, trains, planes, etc) in many situations such as airports, train stations, public areas, sport events, and hospitals. Thus, image and video processing algorithms have got increasing importance, they are required from various computer vision applications such as motion tracking, real time event detection, database (images and videos) indexation, and medical computer-aided diagnosis methods. The main inconvenient of image and video processing applications is the high intensity of computation and the complex configuration and installation of the related materials and libraries. In this paper, we propose a new framework that allows users to select in a smart and efficient way the computing units (CPU or/and GPU) in a cloud-based platform, in case of processing one image (or one video in real time) or many images (or videos). This framework enables to affect the local or remote computing units for calculation after analyzing the type of media and the algorithm complexity. The framework disposes of a set of selected CPU and GPU-based computer vision methods, such as image denoising, histogram computation, features descriptors (SIFT, SURF), points of interest extraction, edges detection, silhouette extraction, and sparse and dense optical flow estimation. These primitive functions are exploited in various applications such as medical image segmentation, videos indexation, real time motion analysis, and left ventricle segmentation and tracking from 2D echocardiography. Experimental results showed a global speedup ranging from 5x to 273x(compared to CPU versions) as result of the application of our framework for the above-mentioned methods. In addition to these performances, the parallel and heterogeneous implementations offered lower power consumption as result of the fast treatment.