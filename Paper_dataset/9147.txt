AB MODERN SERVER SOFTWARE is demanding to develop and operate: It must be available at all times and in all locations; it must reply within milliseconds to user requests; it must respond quickly to capacity demands; it must process a lot of data and even more traffic; it must adapt quickly to changing product needs; and, in many cases, it must accommodate a large engineering organization, its many engineers the proverbial cooks in a big, messy kitchen.
   What's more, the best computers for these applications-whether you call them clouds, datacenters, or warehouse computers-are really bad. They are complex and unreliable, and prone to partial failures. They have asynchronous interconnects and deep memory hierarchies, and leave a lot of room for operator error.(1)
   Cloud computing thus forces us to confront the full complexity of distributed computing, where seemingly simple problems require complicated solutions. While much of this complexity is inherent-the very nature of the problem precludes simpler solutions-much of it is also incidental, a simple consequence of using tools unfit for the purpose.