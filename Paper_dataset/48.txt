DE Data mining; Measurement; Quality of service; Web services; Cloud
   computing; Maintenance engineering; Semantics; Change classification;
   cloud services; distributed systems and services lifecycle management;
   evolution metrics
AB Changeability and evolvability analysis can aid an engineer tasked with a maintenance or an evolution task. This article applies change mining and evolution mining to evolving distributed systems. First, we propose a Service Change Classifier based Interface Slicing algorithm that mines change information from two versions of an evolving distributed system. To compare old and new versions, the following change classification labels are used: inserted, deleted, and modified. These labels are then used to identify subsets of the operations in our newly proposed Interface (WSDL) Slicing algorithm. Second, we proposed four Service Evolution Metrics that capture the evolution of a system's Version Series VS = {V-1, V-2, horizontal ellipsis ,V-N}. Combined the two form the basis of our proposed Service Evolution Analytics model, which includes learning during its development phase. We prototyped the model in an intelligent tool named AWSCM (Automatic Web Service Change Management). Finally, we present results from experiments with two well-known cloud services: Elastic Compute Cloud (EC2) from the Amazon Web Service (AWS), and Cluster Controller (CC) from Eucalyptus. These experiments demonstrate AWSCM's ability to exploit change and evolution mining.