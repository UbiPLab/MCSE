DE Network operating systems; Distributed systems; Virtual devices; Cloud
   computing; Transparent computing
AB Although cloud computing has made significant achievement, it still faces many challenges, such as bad interactive performance and unsatisfying user experience over a long-haul wide-area or wireless network. To address these challenges, we proposed a software-defined stream-based code scheduling framework according to the concept of transparent computing. This framework uses the idea of code streaming to decouple the computation and storage of software codes; this idea also leverages the input/output virtualization technique to support legacy operating systems and application software in a feasible and effective way. The software-defined code scheduling framework allows the computation or storage to be adaptively carried out at appropriate machines with the assistance of performance and capacity monitoring facilities. Thus, the framework can improve application performance and user experiences by executing software codes on a nearer or better machine. We developed a pilot system to investigate the advantages of the proposed framework. Preliminary experimental results show that our approach can achieve better performance than current cloud computing-based systems.