DE Unikernel; Code offloading; Computation offloading; Edge computing; Fog
   computing; Library operating system
ID CLOUD
AB Recently, Mobile Cloud Computing (MCC) which utilizes cloud to enhance mobile device's performance, is becoming more and more popular. A typical approach of MCC is to offload some computation-intensive tasks onto cloud servers to execute and fetch results back. However, this schema suffers greatly from the long-distance network transmission latency and server boot-up latency, leading to high-delay response, which is unacceptable for most real-time applications. Mobile Edge Computing (MEC) or Mobile Fog Computing (MFC) can drastically reduce transmission latency by offloading the tasks onto the edge servers without transferring to remote data centers. However, traditional virtual machines (VM) or containers used in MCC are too heavyweight for resource-constrained environment of edge or fog servers. In this paper, we argue that enhanced unikernel can be used as task runtime in MEC or MFC to efficiently support mobile code offloading. To achieve this goal, we put forward the concept of Rich-Unikernel which aims to support various applications in one unikernel while avoiding their time-consuming recompilation. Following the design of Rich-Unikernel, we implement a not only lightweight but also flexible runtime for offloaded codes, called Android Unikernel, by integrating basic Android system libraries into OSv unikernel. Our experiment shows, compared with VM and container, Android Unikernel introduces much less boot-up delay, memory footprint, image size and energy consumption. (C) 2018 Elsevier B.V. All rights reserved.