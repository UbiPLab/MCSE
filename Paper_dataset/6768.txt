DE Distributed computing; Pilot jobs; Modelling; IaaS
ID PHOTON YIELDS; ARCHITECTURE; EXECUTION; FRAMEWORK; TAXONOMY; CODES; AIR
AB Exploiting resources belonging to multiple cloud providers in an efficient way is still an open issue for distributed computing. Scheduling algorithms based on heuristic, probabilistic, queue theory, or complex soft computing methods are suitable to tackle the heterogeneity and dynamism present in cloud federations. Nevertheless, the available brokering tools are focused on the deployment of services on-demand. The systems able to accomplish high-throughput calculations, such as the pilot-job systems, do not support the inclusion of these algorithms due to their lack of adaptability. The recent implementation of cloud drivers for the GWpilot framework allows developers to profit from its flexibility, compatibility and scheduling features. Moreover, the framework allows the personalised characterisation of cloud resources that those algorithms require, overcoming their lack of trustworthiness in the information provided by the cloud services. In this work, a simple model together with a methodology to couple scheduling software with GWpilot is presented. To demonstrate the suitability of the approach, a legacy self-scheduler specialised on reliable executions in dynamic environments has been stacked and tested on the EGI FedCloud infrastructure with the Nagano legacy application.